# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import demo_pb2 as demo__pb2


class MiniDemoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Sum = channel.unary_unary(
                '/demo.MiniDemo/Sum',
                request_serializer=demo__pb2.SumRequestDto.SerializeToString,
                response_deserializer=demo__pb2.SumResultDto.FromString,
                )
        self.SumArray = channel.unary_unary(
                '/demo.MiniDemo/SumArray',
                request_serializer=demo__pb2.SumArrayRequestDto.SerializeToString,
                response_deserializer=demo__pb2.SumResultDto.FromString,
                )
        self.SumStream = channel.stream_unary(
                '/demo.MiniDemo/SumStream',
                request_serializer=demo__pb2.AccumulatedElementDto.SerializeToString,
                response_deserializer=demo__pb2.SumResultDto.FromString,
                )
        self.SumArrayDetailStream = channel.unary_stream(
                '/demo.MiniDemo/SumArrayDetailStream',
                request_serializer=demo__pb2.SumArrayRequestDto.SerializeToString,
                response_deserializer=demo__pb2.SumResultDto.FromString,
                )
        self.Accumulate = channel.stream_stream(
                '/demo.MiniDemo/Accumulate',
                request_serializer=demo__pb2.AccumulatedElementDto.SerializeToString,
                response_deserializer=demo__pb2.SumResultDto.FromString,
                )


class MiniDemoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Sum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SumArray(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SumStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SumArrayDetailStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Accumulate(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MiniDemoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Sum': grpc.unary_unary_rpc_method_handler(
                    servicer.Sum,
                    request_deserializer=demo__pb2.SumRequestDto.FromString,
                    response_serializer=demo__pb2.SumResultDto.SerializeToString,
            ),
            'SumArray': grpc.unary_unary_rpc_method_handler(
                    servicer.SumArray,
                    request_deserializer=demo__pb2.SumArrayRequestDto.FromString,
                    response_serializer=demo__pb2.SumResultDto.SerializeToString,
            ),
            'SumStream': grpc.stream_unary_rpc_method_handler(
                    servicer.SumStream,
                    request_deserializer=demo__pb2.AccumulatedElementDto.FromString,
                    response_serializer=demo__pb2.SumResultDto.SerializeToString,
            ),
            'SumArrayDetailStream': grpc.unary_stream_rpc_method_handler(
                    servicer.SumArrayDetailStream,
                    request_deserializer=demo__pb2.SumArrayRequestDto.FromString,
                    response_serializer=demo__pb2.SumResultDto.SerializeToString,
            ),
            'Accumulate': grpc.stream_stream_rpc_method_handler(
                    servicer.Accumulate,
                    request_deserializer=demo__pb2.AccumulatedElementDto.FromString,
                    response_serializer=demo__pb2.SumResultDto.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'demo.MiniDemo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MiniDemo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Sum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/demo.MiniDemo/Sum',
            demo__pb2.SumRequestDto.SerializeToString,
            demo__pb2.SumResultDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SumArray(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/demo.MiniDemo/SumArray',
            demo__pb2.SumArrayRequestDto.SerializeToString,
            demo__pb2.SumResultDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SumStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/demo.MiniDemo/SumStream',
            demo__pb2.AccumulatedElementDto.SerializeToString,
            demo__pb2.SumResultDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SumArrayDetailStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/demo.MiniDemo/SumArrayDetailStream',
            demo__pb2.SumArrayRequestDto.SerializeToString,
            demo__pb2.SumResultDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Accumulate(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/demo.MiniDemo/Accumulate',
            demo__pb2.AccumulatedElementDto.SerializeToString,
            demo__pb2.SumResultDto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
